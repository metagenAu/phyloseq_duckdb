% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duckdb_aliases.R
\name{duckdb-aliases}
\alias{duckdb-aliases}
\alias{phyloseq}
\alias{otu_table}
\alias{tax_table}
\alias{sample_data}
\alias{alpha_diversity}
\alias{beta_diversity}
\alias{filter_taxa}
\alias{transform_sample_counts}
\alias{close_phyloseq}
\alias{close_otu_table}
\alias{close_tax_table}
\alias{close_sample_data}
\alias{filter_sample_data}
\alias{unique_taxa}
\alias{unique_sample_values}
\alias{merge_sample_otu}
\alias{taxa_sums}
\alias{sample_sums}
\alias{tax_glom}
\alias{prune_taxa}
\alias{filter_samples}
\alias{psmelt}
\alias{plot_bar}
\alias{plot_ordination}
\title{Function Aliases for DuckDB Implementation}
\usage{
phyloseq(
  otu_table = NULL,
  tax_table = NULL,
  sample_data = NULL,
  taxa_are_rows = TRUE,
  db_path = tempfile()
)

otu_table(object, taxa_are_rows = NULL, db_path = tempfile())

tax_table(object, db_path = tempfile())

sample_data(object, db_path = tempfile())

alpha_diversity(physeq, measures = c("observed", "shannon", "simpson"))

beta_diversity(physeq, method = "bray")

filter_taxa(physeq, min_abundance = 1, min_prevalence = 1)

transform_sample_counts(x, transform = "log10")

close_phyloseq(physeq)

close_otu_table(x)

close_tax_table(x)

close_sample_data(x)

filter_sample_data(x, variable, value, condition = "=")

unique_taxa(x, rank)

unique_sample_values(x, variable)

merge_sample_otu(sample_data, otu_table)

taxa_sums(x)

sample_sums(x)

tax_glom(physeq, taxrank)

prune_taxa(taxa, physeq, keep = TRUE)

filter_samples(
  physeq,
  variable = NULL,
  value = NULL,
  condition = "=",
  min_abundance = NULL,
  min_taxa = NULL
)

psmelt(physeq)

plot_bar(
  physeq,
  x = "Sample",
  y = "Abundance",
  fill = NULL,
  facet_grid = NULL,
  normalize = FALSE
)

plot_ordination(
  physeq,
  method = "PCoA",
  distance = "bray",
  color = NULL,
  shape = NULL,
  size = NULL,
  title = NULL
)
}
\description{
This file provides drop-in replacements for all core phyloseq functions,
allowing seamless use of the DuckDB-based implementation. Each function
is aliased to its DuckDB counterpart without the "_duckdb" suffix,
maintaining compatibility with existing phyloseq workflows while
providing the benefits of DuckDB's optimized storage and queries.
}
\note{
It's important to use the close_* functions to properly manage DuckDB
connections and clean up resources when you're done with an object.
}
\section{Function Mapping}{

Core Object Creation:
\itemize{
  \item \code{phyloseq()} -> \code{phyloseq_duckdb()}
  \item \code{otu_table()} -> \code{otu_table_duckdb()}
  \item \code{tax_table()} -> \code{tax_table_duckdb()}
  \item \code{sample_data()} -> \code{sample_data_duckdb()}
}

Analysis Functions:
\itemize{
  \item \code{alpha_diversity()} -> \code{alpha_diversity_duckdb()}
  \item \code{beta_diversity()} -> \code{beta_diversity_duckdb()}
  \item \code{filter_taxa()} -> \code{filter_taxa_phyloseq_duckdb()}
  \item \code{filter_samples()} -> \code{filter_samples_duckdb()}
  \item \code{tax_glom()} -> \code{tax_glom_duckdb()}
  \item \code{prune_taxa()} -> \code{prune_taxa_duckdb()}
  \item \code{transform_sample_counts()} -> \code{transform_sample_counts_duckdb()}
}

Visualization Functions:
\itemize{
  \item \code{psmelt()} -> \code{psmelt_duckdb()}
  \item \code{plot_bar()} -> \code{plot_bar_duckdb()}
  \item \code{plot_ordination()} -> \code{plot_ordination_duckdb()}
}

Resource Management:
\itemize{
  \item \code{close_phyloseq()} -> \code{close_phyloseq_duckdb()}
  \item \code{close_otu_table()} -> \code{close_otu_table_duckdb()}
  \item \code{close_tax_table()} -> \code{close_tax_table_duckdb()}
  \item \code{close_sample_data()} -> \code{close_sample_data_duckdb()}
}
}

