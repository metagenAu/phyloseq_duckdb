% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform_filter-methods.R
\name{transformCounts}
\alias{transformCounts}
\title{Transform abundance data in an `otu_table`, sample-by-sample}
\usage{
transformCounts(physeq, fun, ...)
}
\arguments{
\item{physeq}{[phyloseq-class()] or [ape::phylo()].}

\item{fun}{A function or formula that can be converted to a function by
[purrr::as_mapper()]}

\item{...}{Additional arguments passed on to `fun`}
}
\description{
Version of [phyloseq::transform_sample_counts()] that allows a
purrr-style anonymous function.
}
\details{
This function simply calls [purrr::as_mapper()] on `fun` and passes the
resulting function on to [phyloseq::transform_sample_counts()].
}
\examples{
data(GlobalPatterns)
# Filter low prevalence taxa, then convert to proportions
gp.prop <- GlobalPatterns \%>\%
  filter_taxa2(~ sum(. > 0) > 5) \%>\%
  transform_sample_counts(~ . / sum(.))
}
\seealso{
[phyloseq::transform_sample_counts()]
[purrr::as_mapper()]
}
