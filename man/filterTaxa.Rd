% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform_filter-methods.R
\name{filterTaxa}
\alias{filterTaxa}
\title{Filter taxa based on across-sample OTU abundance criteria}
\usage{
filterTaxa(physeq, fun, prune = FALSE)
}
\arguments{
\item{physeq}{[phyloseq-class()] or [ape::phylo()].}

\item{fun}{A function or formula that can be converted to a function by
[purrr::as_mapper()]}

\item{prune}{A logical. If `FALSE`, then this function returns a logical
vector specifying the taxa that passed the filter; if `TRUE`, then this
function returns the pruned phyloseq object.}
}
\description{
Variations of [phyloseq::filter_taxa()] that allows a purrr-style anonymous
function.
}
\details{
`filter_taxa()` simply calls [purrr::as_mapper()] on `fun` and passes the
resulting function on to [phyloseq::filter_taxa()]. `filter_taxa2()` also
sets `prune = TRUE`, which is convenient when passing a phyloseq object in a
pipe chain (see example).
}
\examples{
data(GlobalPatterns)
# Filter low prevalence taxa and then convert to proportions
gp.prop <- GlobalPatterns \%>\%
  filter_taxa2(~ sum(. > 0) > 5) \%>\%
  transform_sample_counts(~ . / sum(.))
}
\seealso{
[phyloseq::filter_taxa()]
[purrr::as_mapper()]
}
