% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_samples_duckdb.R
\name{filter_samples_duckdb}
\alias{filter_samples_duckdb}
\title{Filter samples based on criteria using DuckDB}
\usage{
filter_samples_duckdb(
  physeq,
  variable = NULL,
  value = NULL,
  condition = "=",
  min_abundance = NULL,
  min_taxa = NULL
)
}
\arguments{
\item{physeq}{A phyloseq_duckdb object}

\item{variable}{Name of the sample metadata variable to filter on}

\item{value}{Value to filter for}

\item{condition}{Comparison condition ('=', '>', '<', '>=', '<=', '!=')}

\item{min_abundance}{Minimum total abundance threshold for samples}

\item{min_taxa}{Minimum number of taxa present in samples}
}
\value{
A new phyloseq_duckdb object with filtered samples
}
\description{
This function filters samples based on metadata variables or abundance criteria,
efficiently using DuckDB's optimized query engine. Particularly useful for
subsetting large datasets based on experimental conditions or quality metrics.
}
\examples{
# Filter by metadata variable
ps_treated <- filter_samples_duckdb(ps, "Treatment", "Control")

# Filter by abundance threshold
ps_high_counts <- filter_samples_duckdb(ps, 
                                       min_abundance = 1000,
                                       min_taxa = 10)

# Filter by time point
ps_late <- filter_samples_duckdb(ps, "Time", 24, condition = ">=")
}
\seealso{
\code{\link{filter_taxa_duckdb}}, \code{\link{prune_taxa_duckdb}}
}
